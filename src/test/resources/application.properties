#
# Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by
# the European Commission - subsequent versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
#  
#   https://joinup.ec.europa.eu/software/page/eupl
#  
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
#
#

# Spring
spring.profiles.active=in-memory-blobstore,google-pubsub-emulator,test
server.port=28081
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# Camel
camel.springboot.name=Marduk
camel.springboot.streamCachingEnabled=false
camel.springboot.streamCachingSpoolEnabled=true
camel.dataformat.jackson.module-refs=jacksonJavaTimeModule
camel.servlet.mapping.context-path=/services/*
marduk.camel.redelivery.max=0
camel.component.kubernetes.cluster.service.enabled=false
camel.component.kubernetes.cluster.service.cluster-labels[app]=marduk
camel.cluster.file.enabled=true
camel.cluster.file.id=${random.uuid}
camel.cluster.file.root=${java.io.tmpdir}/camel/master

# PubSub
marduk.pubsub.project.id=test
antu.pubsub.project.id=test
nabu.pubsub.project.id=test
camel.component.google-pubsub.endpoint=localhost:8089
camel.component.google-pubsub.authenticate=false
# Spring Cloud GCP is used in unit tests only for spawning a PubSub emulator and creating Topics and Subscriptions
spring.cloud.gcp.project-id=${marduk.pubsub.project.id}
spring.cloud.gcp.pubsub.emulatorHost=localhost:8089

blobstore.gcs.project.id=test
blobstore.gcs.exchange.container.name=marduk-exchange
blobstore.gcs.container.name=marduk
blobstore.gcs.otpreport.container.name=otpreport
blobstore.gcs.graphs.container.name=otp-graphs
blobstore.gcs.nisaba.exchange.container.name=nisaba-exchange

# for local-disk-blobstore only
blobstore.local.folder=target/blobstore

# chouette import/export settings
# IMPORTANT: This URL is referred to in many of the Chouette example responses - make sure in sync with them or tests will fail
# The standard url notation (http://xxx) no longer works with interceptors in camel 2.22.0, so using http:xxx)
chouette.url=http:chouette:8080
chouette.retry.delay=1
chouette.stats.validity.categories=120,127
chouette.stats.days=180

# Google sftp settings
google.publish.sftp.host=notUsed
google.publish.sftp.username=notUsed
google.publish.sftp.password=notUsed

# otp graph building settings
otp.graph.build.directory=target/local/work
otp.graph.blobstore.subdirectory=graphs

# database configuration
spring.flyway.enabled=true


providers.api.url=http://localhost/services/providers/

chouette.stats.cache.refresh.quartz.trigger=cron=0+0+0+1+1+?+2099
chouette.stats.cache.initial.refresh.quartz.trigger=cron=0+0+0+1+1+?+2099

netex.export.merge.flexible.lines.enabled=true

# OAuth2 Resource Server for Entur Partner tenant
marduk.oauth2.resourceserver.auth0.partner.jwt.issuer-uri=http://notinuse
marduk.oauth2.resourceserver.auth0.partner.jwt.audience=notinuse
marduk.oauth2.resourceserver.auth0.partner.admin.activated=true
marduk.oauth2.resourceserver.auth0.partner.organisations={1:'RB', 2:'RUT', 100: 'ORG_NETEX_BLOCKS_VIEWER', 200: 'ORG_NETEX_DELEGATED_EDITOR'}

# OAuth2 Resource Server for RoR tenant
marduk.oauth2.resourceserver.auth0.ror.jwt.issuer-uri=http://notinuse
marduk.oauth2.resourceserver.auth0.ror.jwt.audience=notinuse
marduk.oauth2.resourceserver.auth0.ror.claim.namespace=notinuse

# OAuth2 Client
spring.security.oauth2.client.registration.marduk.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.marduk.client-id=marduk
spring.security.oauth2.client.registration.marduk.client-secret=notInUse
spring.security.oauth2.client.provider.marduk.token-uri=https://notInUse
marduk.oauth2.client.audience=notInUse


netex.import.delegation.authorization={ORG_NETEX_DELEGATED_EDITOR:'RUT'}
netex.export.block.authorization={ORG_NETEX_BLOCKS_VIEWER:'RUT'}

marduk.aggregation.checker.quartz.trigger=trigger.repeatInterval=1000&trigger.repeatCount=-1&stateful=true


# Monitoring
management.endpoints.enabled-by-default=false
management.health.pubsub.enabled=false
management.endpoints.web.exposure.exclude=*
management.endpoints.jmx.exposure.exclude=*

